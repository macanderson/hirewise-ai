# direnv configuration
# This file sets up the development environment for both Python and Node.js components

# ----- Python/Poetry Configuration -----
# Use layout python-venv to create and manage a Python virtual environment
layout python python3

# Add Poetry bin directory to PATH
PATH_add $HOME/.local/bin

# Set Poetry configuration
export POETRY_VIRTUALENVS_IN_PROJECT=true
export PYTHONPATH=$PWD/apps/api/src:$PWD/packages/database/src:$PYTHONPATH

# Automatically install Poetry dependencies if not already installed
if ! command -v poetry &> /dev/null; then
  echo "Installing Poetry..."
  curl -sSL https://install.python-poetry.org | python3 -
fi

# Install Python dependencies using Poetry
if [ -f "apps/api/pyproject.toml" ]; then
  # Check again if poetry is in PATH after potential installation
  if command -v poetry &> /dev/null; then
    cd apps/api && poetry install && cd ../../
  else
    echo "Warning: Poetry not available. Please restart your shell or manually add $HOME/.local/bin to your PATH."
  fi
fi

# ----- Node.js/PNPM Configuration -----
# Add node_modules/.bin to PATH for local package executables
PATH_add node_modules/.bin

# Ensure PNPM is configured properly
export PNPM_HOME="$HOME/.pnpm"
PATH_add $PNPM_HOME

# Automatically install Node.js dependencies if needed
if [ -f "package.json" ] && [ ! -d "node_modules" ]; then
  echo "Installing Node.js dependencies with PNPM..."
  pnpm install
fi

# ----- Load Environment Variables -----
# Source environment variables from .env.local if it exists
if [ -f "apps/web/.env.local" ] || [ -f ".env.local" ] || [ -f "apps/api/.env.local" ] || [ -f "packages/database/.env.local" ]; then
  echo "Loading environment variables from .env.local..."
  dotenv .env.local
fi

# ----- Environment Variables -----
# FastAPI backend configuration
# export FASTAPI_ENV=development
# export API_HOST=0.0.0.0
# export API_PORT=8000
# export API_DEBUG=true

# # Next.js frontend configuration
# export NEXT_PUBLIC_API_URL=http://localhost:8000
# export NEXT_PUBLIC_ENV=development

# # ----- Prisma Configuration -----
# export PRISMA_SCHEMA_PATH="packages/db/schema.prisma"
# export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/hirewise?schema=public"

# ----- Development Tools -----
# Add any additional local development tools to PATH
PATH_add ./.bin

# Log that the environment has been loaded
echo "development environment loaded!"
